apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-db
spec:
  serviceName: {{ .Release.Name }}-db
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-db
    spec:
      containers:
        - name: postgres
          image: {{ .Values.db.image }}
          ports:
            - name: postgres
              containerPort: {{ .Values.db.port }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.db.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.db.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-db-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
          readinessProbe:
            exec:
              command: ["bash", "-lc", "pg_isready -U {{ .Values.db.username }} -d {{ .Values.db.database }} -h 127.0.0.1 -p {{ .Values.db.port }}"]
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["bash", "-lc", "pg_isready -U {{ .Values.db.username }} -d {{ .Values.db.database }} -h 127.0.0.1 -p {{ .Values.db.port }}"]
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: init-sql
          configMap:
            name: {{ .Release.Name }}-db-init
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.db.persistence.storageClass }}
        storageClassName: {{ .Values.db.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.db.persistence.size }}
